package diag.reiter;

import java.util.Set;

import lang.Network;
import lang.State;
import lang.YAMLDEvent;
import util.AlarmLog;
import edu.supercom.util.Options;

/**
 * A solver is an object that, given inputs for a diagnosis problem, 
 * generates the problem and solves it.  
 * */
public interface Solver<H extends Hypothesis, C extends Conflict> {

	/**
	 * Solves the specified diagnosis problem.  
	 * 
	 * @param opt the list of options.  
	 * @param net the network on which the problem is defined.  
	 * @param st  the initial state of the network.  
	 * @param log the observations generated by the system.  
	 * @param space the hypothesis space on which the diagnosis is defined.  
	 * @param faults the list of faulty events 
	 * (no two such events can take place at the same time).  
	 * */
	public Diagnosis<H> solve(Options opt,
			Network net, 
			State st,  
			AlarmLog log, 
			HypothesisSpace<H,C> space,
			Set<YAMLDEvent> faults);
}
